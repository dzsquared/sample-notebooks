# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      directory:
        description: 'Jupyter Book to Release (defaults to whole repository)'
        default: '.'
        required: true
      releasename:
        description: 'Release name'
        required: true
      bookname:
        description: 'Book name'
        required: true
      versionnumber:
        description: 'Version number'
        required: true
      languageid:
        description: 'Language id'
        default: 'EN'
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # create zip and tar.gz files
  RemoteBook:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Publish book
        uses: dzsquared/jupyter-publish-action@v0.0.6
        with:
          directory: ${{ github.event.inputs.directory }}
          releasename:  ${{ github.event.inputs.releasename }}
          bookname: ${{ github.event.inputs.bookname }}
          versionnumber: ${{ github.event.inputs.versionnumber }}
          languageid: ${{ github.event.inputs.languageid }}
          githubtoken: ${{ secrets.GITHUB_TOKEN }}
      # - name: Archive to zip
      #   run: |
      #     zip -r jupyterbook.zip * -x jupyterbook.tar.gz
      # - name: Archive to tar
      #   run: |
      #     touch jupyterbook.tar.gz
      #     tar -czvf jupyterbook.tar.gz --exclude=jupyterbook.tar.gz --exclude=jupyterbook.zip *
      # - name: Get current date
      #   id: date
      #   run: echo "::set-output name=date::$(date +%Y%m%dT%H%M%S)"
      # - name: Create release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: "${{ steps.date.outputs.date }}"
      #     release_name: ${{ github.event.inputs.releasename }}
      #     draft: false
      #     prerelease: false
      # - name: Upload zip
      #   id: upload-zip
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with: 
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path:  ./jupyterbook.zip
      #     asset_name: ${{ github.event.inputs.bookname }}-${{ github.event.inputs.versionnumber }}-${{ github.event.inputs.languageid }}.zip
      #     asset_content_type: application/zip
      # - name: Upload tar
      #   id: upload-tar
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with: 
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path:  ./jupyterbook.tar.gz
      #     asset_name: ${{ github.event.inputs.bookname }}-${{ github.event.inputs.versionnumber }}-${{ github.event.inputs.languageid }}.tar.gz
      #     asset_content_type: application/x-compressed-tar
